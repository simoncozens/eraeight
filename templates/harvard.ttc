#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1255280797',
        'name' => 'harvard',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  " <div style=\"margin-left:20px;\n background: #efefff; margin:10px; padding: 5px; width: 80%; font-size: 9pt\">\n  ";
#line 3 "templates/harvard"
    $stash->set('cmax', $stash->get(['book', 0, 'authors', 0, 'size', 0]));
#line 3 "templates/harvard"
    if ($stash->get('cmax') > 4) {
    $stash->set('cmax', 3);
    }
    
#line 3 "templates/harvard"
    $stash->set('count', 0);
#line 10 "templates/harvard"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['book', 0, 'authors', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'a'} = $_tt_value;
#line 3 "templates/harvard"
    $stash->set('count', $stash->get('count') + 1);
    
    $output .=  "\n ";
#line 5 "templates/harvard"
    $output .=  $stash->get(['a', 0, 'lastname', 0]);
#line 5 "templates/harvard"
    $output .=  ', ';
#line 5 "templates/harvard"
    $output .=  $stash->get(['a', 0, 'firstname', 0, 'substr', [ 0, 1 ]]);
#line 5 "templates/harvard"
    $output .=  '.';
#line 5 "templates/harvard"
    if ($stash->get(['book', 0, 'authors', 0, 'size', 0]) > 4 && $stash->get('count') eq 3) {
#line 5 "templates/harvard"
    $output .=  ' et al.';
#line 5 "templates/harvard"
    last FOR1;
    }
    
#line 5 "templates/harvard"
    if ($stash->get('a') ne $stash->get(['book', 0, 'authors', 0, 'last', 0]) && $stash->get('count') < ($stash->get('cmax') - 1)) {
#line 5 "templates/harvard"
    $output .=  ' &amp ';
    }
    
#line 5 "templates/harvard"
    if ($stash->get('a') ne $stash->get(['book', 0, 'authors', 0, 'last', 0]) && $stash->get('count') eq ($stash->get('cmax') - 1)) {
#line 5 "templates/harvard"
    $output .=  ' and ';
    }
    
    
    $output .=  "\n ";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    
    $output .=  "\n (";
#line 11 "templates/harvard"
    $output .=  $stash->get(['book', 0, 'year', 0]);
    $output .=  ") <i>";
#line 11 "templates/harvard"
    $output .=  $stash->get(['book', 0, 'title', 0]);
    $output .=  "</i>, ";
#line 11 "templates/harvard"
    if ($stash->get(['book', 0, 'address', 0])) {
#line 11 "templates/harvard"
    $output .=  $stash->get(['book', 0, 'address', 0]);
#line 11 "templates/harvard"
    $output .=  ': ';
    }
    
#line 11 "templates/harvard"
    $output .=  $stash->get(['book', 0, 'publisher', 0]);
    $output .=  "\n </div>\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
