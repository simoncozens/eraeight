#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1255296081',
        'name' => 'results',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 1 "templates/results"
    $output .=  $context->include('minisearch');
    $output .=  "\n<p>\n    Results ";
#line 3 "templates/results"
    $output .=  $stash->get(['pager', 0, 'first', 0]);
    $output .=  " to ";
#line 3 "templates/results"
    $output .=  $stash->get(['pager', 0, 'last', 0]);
    $output .=  " of ";
#line 3 "templates/results"
    $output .=  $stash->get(['pager', 0, 'total_entries', 0]);
    $output .=  "\n    for \"";
#line 4 "templates/results"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['req', 0, 'parameters', 0, 'q', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n</p>\n<center>\n";
#line 7 "templates/results"
    $output .=  $context->include('pager');
    $output .=  "    \n</center>\n<table>\n";
#line 24 "templates/results"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('books');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'book'} = $_tt_value;
    $output .=  "\n<p>\n <a href=\"/details?book=";
#line 12 "templates/results"
    $output .=  $stash->get(['book', 0, 'book', 0]);
    $output .=  "\">";
#line 12 "templates/results"
    $output .=  $stash->get(['book', 0, 'title', 0]);
    $output .=  "</a>  \n <small> ";
#line 15 "templates/results"
    if ($stash->get(['book', 0, 'authors', 0])) {
    $output .=  "by ";
#line 15 "templates/results"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['book', 0, 'authors', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'a'} = $_tt_value;
    $output .=  "\n ";
#line 14 "templates/results"
    $output .=  $stash->get(['a', 0, 'firstname', 0]);
#line 14 "templates/results"
    $output .=  ' ';
#line 14 "templates/results"
    $output .=  $stash->get(['a', 0, 'lastname', 0]);
#line 14 "templates/results"
    if (!($stash->get('a') eq $stash->get(['book', 0, 'authors', 0, 'last', 0]))) {
    $output .=  ',';
    }
    
    $output .=  "\n ";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    
    }
    
    $output .=  "\n </small><br/>\n <div style=\"margin-left:20px; margin-top:0; padding:0\">\n";
#line 18 "templates/results"
    $stash->set('h', $stash->get(['book', 0, 'holdings', 0]));
#line 18 "templates/results"
    $stash->set('in', 0);
#line 18 "templates/results"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('h');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'x'} = $_tt_value;
#line 18 "templates/results"
    if (!($stash->get(['x', 0, 'on_loan', 0]))) {
    $stash->set('in', $stash->get('in') + 1);
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    
    $output .=  "\n     <small>Copies available: ";
#line 19 "templates/results"
    $output .=  $stash->get('in');
    $output .=  " of ";
#line 19 "templates/results"
    $output .=  $stash->get(['h', 0, 'size', 0]);
    $output .=  "</small>\n<br>\n </div>\n</p>\n\n";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</table>\n<center>\n";
#line 27 "templates/results"
    $output .=  $context->include('pager');
    $output .=  "    \n</center>\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
