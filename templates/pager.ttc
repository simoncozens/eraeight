#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1255297905',
        'name' => 'pager',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 9 "templates/pager"
    
    # MACRO
    $stash->set('link_page', sub {
        my $output = '';
        my (%_tt_args, $_tt_params);
        $_tt_args{ 'num' } = shift;
        $_tt_params = shift;
        $_tt_params = { } unless ref($_tt_params) eq 'HASH';
        $_tt_params = { %_tt_args, %$_tt_params };
    
        my $stash = $context->localise($_tt_params);
        eval {
    
    $output .=  "\n      ";
#line 8 "templates/pager"
    if ($stash->get('num') eq $stash->get(['pager', 0, 'current_page', 0])) {
    $output .=  "\n            ";
#line 3 "templates/pager"
    $output .=  $stash->get('num');
    $output .=  "\n      ";
    }
    else {
    $output .=  "\n      <a href=\"?page=";
#line 5 "templates/pager"
    $output .=  $stash->get('num');
    $output .=  "&q=";
#line 5 "templates/pager"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['req', 0, 'parameters', 0, 'q', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n            ";
#line 6 "templates/pager"
    $output .=  $stash->get('num');
    $output .=  "\n      </a>\n      ";
    }
    
    $output .=  "\n";
        };
        $stash = $context->delocalise();
        die $@ if $@;
        return $output;
    });
    
    $output .=  "\n";
#line 21 "templates/pager"
    if ($stash->get(['pager', 0, 'last_page', 0]) > 1) {
#line 10 "templates/pager"
    $stash->set('begin_page', $stash->get(['pager', 0, 'current_page', 0]) - 5);
#line 10 "templates/pager"
    if ($stash->get('begin_page') < 1) {
#line 10 "templates/pager"
    $stash->set('begin_page', $stash->get(['pager', 0, 'first_page', 0]));
    }
    
#line 10 "templates/pager"
    $stash->set('end_page', $stash->get(['pager', 0, 'current_page', 0]) + 5);
#line 10 "templates/pager"
    if ($stash->get(['pager', 0, 'last_page', 0]) < $stash->get('end_page')) {
#line 10 "templates/pager"
    $stash->set('end_page', $stash->get(['pager', 0, 'last_page', 0]));
    }
    
#line 10 "templates/pager"
    if ($stash->get('begin_page') ne 1) {
#line 10 "templates/pager"
    $output .=  $stash->get(['link_page', [ 1 ]]);
#line 10 "templates/pager"
    $output .=  ' ... ';
    }
    
#line 21 "templates/pager"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = [ $stash->get('begin_page')..$stash->get('end_page') ];
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'num'} = $_tt_value;
#line 10 "templates/pager"
    $output .=  $stash->get(['link_page', [ $stash->get('num') ]]);
    
    $output .=  " &nbsp; ";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
#line 21 "templates/pager"
    if ($stash->get('end_page') ne $stash->get(['pager', 0, 'last_page', 0])) {
#line 21 "templates/pager"
    $output .=  '...';
#line 21 "templates/pager"
    $output .=  $stash->get(['link_page', [ $stash->get(['pager', 0, 'last_page', 0]) ]]);
    }
    
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
