#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1255903284',
        'name' => 'details',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 1 "templates/details"
    $output .=  $context->include('minisearch');
    $output .=  "\n\n<div style=\"float:right; margin-right:30px; text-align:center\">\n";
#line 4 "templates/details"
    if ($stash->get(['book', 0, 'amazon', 0]) && $stash->get(['book', 0, 'amazon', 0, 'imageurlmedium', 0])) {
    $output .=  "<img src=\"";
#line 4 "templates/details"
    $output .=  $stash->get(['book', 0, 'amazon', 0, 'imageurlmedium', 0]);
    $output .=  "\"/>";
    }
    
    $output .=  "\n";
#line 5 "templates/details"
    $output .=  $context->include('gpreview');
    $output .=  "\n</div>\n<h1>";
#line 7 "templates/details"
    $output .=  $stash->get(['book', 0, 'title', 0]);
    $output .=  "</h1>\n <p> ";
#line 10 "templates/details"
    if ($stash->get(['book', 0, 'authors', 0])) {
    $output .=  "by ";
#line 10 "templates/details"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['book', 0, 'authors', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'a'} = $_tt_value;
    $output .=  "\n ";
#line 9 "templates/details"
    $output .=  $stash->get(['a', 0, 'firstname', 0]);
#line 9 "templates/details"
    $output .=  ' ';
#line 9 "templates/details"
    $output .=  $stash->get(['a', 0, 'lastname', 0]);
#line 9 "templates/details"
    if (!($stash->get('a') eq $stash->get(['book', 0, 'authors', 0, 'last', 0]))) {
    $output .=  ',';
    }
    
    $output .=  "\n ";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    
    }
    
    $output .=  "\n </p>\n <table>\n    <tr><th>Classmark</th> <td> ";
#line 13 "templates/details"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['book', 0, 'classmarks', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'c'} = $_tt_value;
    $output .=  " ";
#line 13 "templates/details"
    $output .=  $stash->get(['c', 0, 'classmark', 0]);;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "</td></tr>\n    ";
#line 18 "templates/details"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = [ 'year', 'publisher', 'dimensions', 'edition', 'notes', 'address' ];
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'col'} = $_tt_value;
    $output .=  "\n        ";
#line 17 "templates/details"
    if ($stash->get(['book', 0, $stash->get('col'), 0])) {
    $output .=  "\n        <tr><th align=\"left\">";
#line 17 "templates/details"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('ucfirst')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('col');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</th><td>";
#line 17 "templates/details"
    $output .=  $stash->get(['book', 0, $stash->get('col'), 0]);
    $output .=  "</td></tr>";
    }
    
    $output .=  "\n    ";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</table>\n\n\n<div id=\"tabs\">\n    <ul>\n        <li><a href=\"#tabs-1\">Holdings</a></li>\n        ";
#line 25 "templates/details"
    if ($stash->get(['book', 0, 'amazon', 0, 'productdescription', 0])) {
    $output .=  " <li><a href=\"#tabs-2\">Description</a></li> ";
    }
    
    $output .=  "\n        <li><a href=\"#tabs-3\">Bibliographic Citation</a></li>\n    </ul>\n    <div id=\"tabs-1\"> ";
#line 28 "templates/details"
    $output .=  $context->include('holdings');
    $output .=  " </div>\n";
#line 33 "templates/details"
    if ($stash->get(['book', 0, 'amazon', 0, 'productdescription', 0])) {
    $output .=  " \n    <div id=\"tabs-2\"> <h3> Description </h3>\n    <p> ";
#line 31 "templates/details"
    $output .=  $stash->get(['book', 0, 'amazon', 0, 'productdescription', 0]);
    $output .=  " </p> \n    </div>\n";
    }
    
    $output .=  "\n    <div id=\"tabs-3\">\n";
#line 35 "templates/details"
    $output .=  $context->include('harvard');
    $output .=  "\n";
#line 36 "templates/details"
    $output .=  $context->include('bibtex');
    $output .=  "\n</div>\n<script type=\"text/javascript\"> \$(function() { \$(\"#tabs\").tabs(); }); </script>\n\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
